//The sequence of triangle numbers is generated by adding the natural numbers.
//So the 7th triangle number would be:
//1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
//The first ten terms would be:
//1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

//Let us list the factors(約数) of the first seven triangle numbers:
//1:1
//3:1, 3
//6:1,2,3,6
//10:1,2,5,10
//15:1,3,5,15
//21:1,3,7,21
//28:1,2,4,7,14,28

//We can see that 28 is the first triangle number to have over five divisors.
//What is the value of the first triangle number to have over five hundred divisors?

// numの約数の個数を返す
function findNumOfFactors(num){
    let count = 0;
    for(let i = 1; i <= Math.sqrt(num); i++){
        if(num%i === 0){
            count ++;
            if(!(i === num%i)){ //平方数
                count++;
            }
        }
    }
    return count;
}

// test
console.log(findNumOfFactors(10)); // -> 4

// // num番目のtriangle numを求める
// function searchNstTriangleNum(num){
//     if(num === 1){
//         return 1;
//     }else{
//         return searchNstTriangleNum(num - 1) + num; 
//     }
// }

// // test
// console.log(searchNstTriangleNum(7)); // -> 28

function searchTriangleNumOverNum(limit){
    let count = 1;
    let triangleNumber = 1;

    while(true){
        count ++;
        triangleNumber += count;
        if(findNumOfFactors(triangleNumber) > limit){
            return triangleNumber;
        }
    }

    
}

// test
console.log(searchTriangleNumOverNum(5)); // -> 28

// ans
console.log(searchTriangleNumOverNum(500)); // -> 76576500

